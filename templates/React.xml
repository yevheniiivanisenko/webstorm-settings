<templateSet group="React">
  <template name="impt" value="import PropTypes from 'prop-types';" description="Import prop-types library instance" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="reduc" value="export default function $TM_FILENAME_BASE$(state = {}, action) {&#10;  switch (action.type) {&#10;    default:&#10;      return state;&#10;  }&#10;}&#10;" description="Creates redux reducer" toReformat="false" toShortenFQNames="true">
    <variable name="TM_FILENAME_BASE" expression="camelCase(fileNameWithoutExtension())" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="depr" value="const {$PROP$} = this.props;" description="Destruct props" toReformat="false" toShortenFQNames="true">
    <variable name="PROP" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="duck" value="const $ACTION$ = 'project/$TM_FILENAME_BASE$/$ACTION$';&#10;&#10;export const $DUCK_NAME$ = (state) =&gt; state.$DUCK_NAME$;&#10;&#10;const defaultState = null;&#10;&#10;export default function $TM_FILENAME_BASE$(state = defaultState, action) {&#10;switch (action.type) {&#10;case $ACTION$:&#10;return action.$DUCK_NAME$;&#10;default:&#10;return state;&#10;}&#10;}&#10;&#10;&#10;export const $ACTION_CREATOR$ = ($DUCK_NAME$) =&gt; ({&#10;  type: $ACTION$,&#10;  $DUCK_NAME$&#10;});" description="Simple redux duck" toReformat="true" toShortenFQNames="true">
    <variable name="ACTION" expression="" defaultValue="&quot;ACTION_CONSTANT&quot;" alwaysStopAt="true" />
    <variable name="ACTION_CREATOR" expression="" defaultValue="&quot;receiveDuckName&quot;" alwaysStopAt="true" />
    <variable name="TM_FILENAME_BASE" expression="camelCase(fileNameWithoutExtension()))" defaultValue="" alwaysStopAt="false" />
    <variable name="DUCK_NAME" expression="" defaultValue="&quot;duckName&quot;" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
</templateSet>